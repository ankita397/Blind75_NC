//https://leetcode.com/problems/two-sum/description/
//Eg : nums = [2,7,11,15], target = 13
//i = 0 , second_index_val = 13 - 2 = 11 
//true -> resArr[0] = map.get(11) = 2 , resArr[1] = 0
class Solution {
    public int[] twoSum(int[] nums, int target) {
       int[] resArr = new int[2];
       HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
       for(int i = 0 ; i < nums.length; i++){
            int second_index_val = target - nums[i];
           //if difference between target and current number is present among the map keys
           if(map.containsKey(second_index_val)){
               resArr[0] = map.get(second_index_val);//stores index of second_index_val
               resArr[1] = i;
           }
           map.put(nums[i],i);// key = actual number(second_index_val) and value = number index
       }
       return resArr; 
    }
}
